# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
ret_tc
mlef$par
mean(ret_tc)
garch_loglik<-function(para,x){
# Parameters
mu=mean(x)
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.01,0.6,0.6)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc)
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
fit
coeff(fit)
coef(fit)
library(quantmod)
library(quantmod)
library(rugarch)
# DATA
amazon<-getSymbols("^DJI",src="yahoo", from="2012-01-01",to="2019-01-01", auto.assign = F)
amazonlog<-as.data.frame(log10(amazon[,6]))
N=length(amazonlog[,1])
amazon_ret<-100*(amazonlog[2:N,]-amazonlog[1:N-1,])
modelx<-ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),
distribution.model = "norm",fixed.pars = list(mu=0))
setstart(modelx) <- list(omega=0.2, alpha1 = 0.8, beta1 = 0.2)
fitx = ugarchfit(data =amazon_ret , spec = modelx, method="BFGS")
coef(fitx)
#MANUAL
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.8,0.2)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),amazon_ret,0)
mlef$par
coef(fitx)
library(zoo)
library(xts)
library(rugarch)
library(tseries)
library(rmgarch)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data_csv <- read.csv("tc24febrero.csv")
data <- na.omit(data_csv)
day <- as.Date(data[,1], format = "%d/%m/%y")
TC  <- as.xts(zoo(data$Dolar.observado,order.by=day))
ret_tc = diff(log(as.numeric(TC)))
#plot.ts(ret_tc)
length(ret_tc)
# Specify a standard GARCH model with constant mean
spec <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),
distribution.model = "norm",fixed.pars = list(mu=0))
fit <- ugarchfit(data = ret_tc, spec = spec, method="BFGS")
coef(fit)
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
mlef$par
coef(fit)
coef(fitx)
fit
mlef$par
garch_loglik<-function(para,x){
mu = mean(x)
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc)
mlef$par
## Manual estimation
mu = mean(ret_tc)
garch_loglik<-function(para,x){
mu = mean(x)
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
mean(ret_tc)
garch_loglik<-function(para,x){
mu = 0.0001664391
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc)
mlef$par
rm(mlef)
mlef
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc)
mlef$par
#mu = mean(x)
# Parameters
omega0=para[1]
alpha=para[2]
## Manual estimation
garch_loglik<-function(para,x,mu){
#mu = mean(x)
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
mlef$par
library(zoo)
library(xts)
library(rugarch)
library(tseries)
library(rmgarch)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data_csv <- read.csv("tc24febrero.csv")
data <- na.omit(data_csv)
day <- as.Date(data[,1], format = "%d/%m/%y")
TC  <- as.xts(zoo(data$Dolar.observado,order.by=day))
ret_tc = diff(log(as.numeric(TC)))
#plot.ts(ret_tc)
length(ret_tc)
# Specify a standard GARCH model with constant mean
spec <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),
distribution.model = "norm",fixed.pars = list(mu=0))
# Estimate the model
fit <- ugarchfit(data = ret_tc, spec = spec, method="BFGS")
fit
coef(fit)
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.8,0.2)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
library(quantmod)
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.8,0.2)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
mlef$par
coef(fit)
library(quantmod)
library(rugarch)
# DATA
amazon<-getSymbols("^DJI",src="yahoo", from="2012-01-01",to="2019-01-01", auto.assign = F)
amazonlog<-as.data.frame(log10(amazon[,6]))
N=length(amazonlog[,1])
amazon_ret<-100*(amazonlog[2:N,]-amazonlog[1:N-1,])
# RUGARCH
modelx<-ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),
distribution.model = "norm",fixed.pars = list(mu=0))
setstart(modelx) <- list(omega=0.2, alpha1 = 0.8, beta1 = 0.2)
fitx = ugarchfit(data =amazon_ret , spec = modelx, method="BFGS")
coef(fitx)
#MANUAL
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.8,0.2)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),amazon_ret,0)
mlef$par
typeof(amazon_ret)
typeof(tc_ret)
library(zoo)
library(xts)
library(rugarch)
library(tseries)
library(rmgarch)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data_csv <- read.csv("tc24febrero.csv")
data <- na.omit(data_csv)
day <- as.Date(data[,1], format = "%d/%m/%y")
TC  <- as.xts(zoo(data$Dolar.observado,order.by=day))
ret_tc = diff(log(as.numeric(TC)))
#plot.ts(ret_tc)
length(ret_tc)
# Specify a standard GARCH model with constant mean
spec <- ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),
distribution.model = "norm",fixed.pars = list(mu=0))
# Estimate the model
fit <- ugarchfit(data = ret_tc, spec = spec, method="BFGS")
fit
coef(fit)
# Use the method sigma to retrieve the estimated volatilities
garchvol <- c(mean(sigma(fit)),sigma(fit))
# Plot the volatility for 2017
vol <- zoo(garchvol, order.by = day)
plot(vol, xaxt = "n")
axis(1, day, format(day, "%m/%Y"), cex.axis = .7)
typeof(amazon_ret)
typeof(tc_ret)
typeof(ret_tc)
class(ret_tc)
class(amazon_ret)
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.8,0.2)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
coef(fit)
para=c(0.2,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
para=c(0.01,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),ret_tc,0)
para=c(0.01,0.2,0.8)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("L-BFGS-B"),ret_tc,0)
library(quantmod)
library(rugarch)
# DATA
amazon<-getSymbols("^DJI",src="yahoo", from="2012-01-01",to="2019-01-01", auto.assign = F)
amazonlog<-as.data.frame(log10(amazon[,6]))
N=length(amazonlog[,1])
amazon_ret<-100*(amazonlog[2:N,]-amazonlog[1:N-1,])
# RUGARCH
modelx<-ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),
distribution.model = "norm",fixed.pars = list(mu=0))
setstart(modelx) <- list(omega=0.2, alpha1 = 0.8, beta1 = 0.2)
fitx = ugarchfit(data =amazon_ret , spec = modelx, method="BFGS")
coef(fitx)
#MANUAL
garch_loglik<-function(para,x,mu){
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.8,0.2)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),amazon_ret,0)
mlef$par
coef(fitx)
#MANUAL
garch_loglik<-function(para,x){
mu = mean(x)
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
library(quantmod)
library(rugarch)
# DATA
amazon<-getSymbols("^DJI",src="yahoo", from="2012-01-01",to="2019-01-01", auto.assign = F)
amazonlog<-as.data.frame(log10(amazon[,6]))
N=length(amazonlog[,1])
amazon_ret<-100*(amazonlog[2:N,]-amazonlog[1:N-1,])
# RUGARCH
modelx<-ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = TRUE),
distribution.model = "norm")
setstart(modelx) <- list(omega=0.2, alpha1 = 0.8, beta1 = 0.2)
fitx = ugarchfit(data =amazon_ret , spec = modelx, method="BFGS")
coef(fitx)
mean(amazon_ret)
modelx<-ugarchspec(variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0), include.mean = FALSE),
distribution.model = "norm")
setstart(modelx) <- list(omega=0.2, alpha1 = 0.8, beta1 = 0.2)
fitx = ugarchfit(data =amazon_ret , spec = modelx, method="BFGS")
coef(fitx)
mean(amazon_ret)
#MANUAL
garch_loglik<-function(para,x){
mu = mean(x)
# Parameters
omega0=para[1]
alpha=para[2]
beta=para[3]
# Volatility and loglik initialisation
loglik=0
h=var(x)
# Start of the loop
vol=c()
for (i in 2:length(x)){
h=omega0+alpha*(x[i-1]-mu)^2+beta*h
loglik=loglik+dnorm(x[i],mu,sqrt(h),log=TRUE)
}
print(para)
return(-loglik)
}
para=c(0.2,0.8,0.2)
mlef<-optim(para, garch_loglik, gr = NULL,method = c("BFGS"),amazon_ret)
mlef$par
coef(fitx)
